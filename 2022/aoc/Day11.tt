<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension="generated.cs" #>

// generated file - don't change manually

namespace aoc; 

public partial class Day11
{
    /// <summary>
    /// generated method
    /// </summary>     
    private List<(int Value, bool IsProcessed)> CreateTuples(int[] arr) => 
        arr.Select(x => (x, false)).ToList();
            
    /// <summary>
    /// generated method
    /// </summary>      
    private Dictionary<int, Monkey> SetupMonkeys()
    {
        return new Dictionary<int, Monkey> (){
        
        <#
        var src = File.ReadAllText(this.Host.ResolvePath("Day11.txt"));

        Regex regex = new Regex(@"(Monkey (\d+):
Starting items: ([\d ,]+)
Operation: new = ([\w\d+* ]+)
Test: divisible by (\d+)
If true: throw to monkey (\d+)
If false: throw to monkey (\d+))",
            RegexOptions.Multiline);

        var m = regex.Matches(src);

        for(int i = 0; i < m.Count; i++){
        #>
        
                { <#= m[i].Groups[2] #>, new Monkey {
                        Items = CreateTuples(new[]{ <#= m[i].Groups[3] #> }),
                        Operation = (old) => <#= m[i].Groups[4] #>,
                        DivideBy = <#= m[i].Groups[5] #>,
                        OnTrue = <#= m[i].Groups[6] #>,
                        OnFalse = <#= m[i].Groups[7] #>,
                    }
                },
        <#
        }
        #>


        };
    }
}